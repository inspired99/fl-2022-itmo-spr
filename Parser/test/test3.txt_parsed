(start (functionSpecifier if_fn ( ) { (funcInnerStatement (ifStatement if ( (logicExpr (compare (arithmeticExpr (baseExpr iff)))) ) (statement (funcInnerStatement (assignment x = (logicExpr (compare (arithmeticExpr (baseExpr then))))))) else (statement (funcInnerStatement (assignment x = (logicExpr (compare (arithmeticExpr (baseExpr fi)))))) ; (funcInnerStatement (functionInvokation f ( main ))) ; (funcInnerStatement (ifStatement if ( (logicExpr (compare (arithmeticExpr (baseExpr x)))) ) (statement (funcInnerStatement (ifStatement if ( (logicExpr (compare (arithmeticExpr (baseExpr y)))) ) (statement (funcInnerStatement (ifStatement if ( (logicExpr (compare (arithmeticExpr (baseExpr z)))) ) (statement (funcInnerStatement (skipStatement skip))) else (statement (funcInnerStatement (skipStatement skip)))))) else (statement (funcInnerStatement (skipStatement skip))))))))))) }) (functionSpecifier while_fn ( ) { (funcInnerStatement (whileStatement while ( (logicExpr (compare (arithmeticExpr (baseExpr x)))) ) (statement (funcInnerStatement (whileStatement while ( (logicExpr (compare (arithmeticExpr (baseExpr y)))) ) (statement (funcInnerStatement (whileStatement while ( (logicExpr (compare (arithmeticExpr (baseExpr z)))) ) (statement (funcInnerStatement (skipStatement skip))))))))))) }) (functionSpecifier compound_fn ( ) { (funcInnerStatement (bracesBlockStatement { })) ; (funcInnerStatement (bracesBlockStatement { })) ; (funcInnerStatement (bracesBlockStatement { (statement (funcInnerStatement (bracesBlockStatement { (statement (funcInnerStatement (bracesBlockStatement { (statement (funcInnerStatement (bracesBlockStatement { (statement (funcInnerStatement (bracesBlockStatement { }))) }))) }))) }))) })) }) (entryPoint main ( ) { (funcInnerStatement (functionInvokation x ( (logicExpr (compare (arithmeticExpr (baseExpr (functionInvokation x ( (logicExpr (compare (arithmeticExpr (baseExpr (functionInvokation x ( (logicExpr (compare (arithmeticExpr (baseExpr (functionInvokation x ( (logicExpr (compare (arithmeticExpr (baseExpr (functionInvokation x ( (logicExpr (compare (arithmeticExpr (baseExpr (functionInvokation x ( (logicExpr (compare (arithmeticExpr (baseExpr (functionInvokation x ( (logicExpr (compare (arithmeticExpr (baseExpr (functionInvokation x ( (logicExpr (compare (arithmeticExpr (baseExpr (functionInvokation x ( )))))) )))))) )))))) )))))) )))))) )))))) )))))) )))))) ))) ; (funcInnerStatement (skipStatement skip)) ; (funcInnerStatement (assignment x = (logicExpr (compare (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr - (arithmeticExpr (baseExpr x))))))))))))))))))))))))))))))))) ; (funcInnerStatement (assignment x = (logicExpr (compare (arithmeticExpr (arithmeticExpr (baseExpr 1)) + (arithmeticExpr (baseExpr x))))))) }) <EOF>)